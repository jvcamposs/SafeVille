<<<<<<< HEAD
name: CI/CD SafeVille

on:
  push:
    branches: [ main, staging ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
=======
name: CI/CD - SafeVille

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup JDK
>>>>>>> 1a1d24d (Configura pipeline CI/CD completo)
        uses: actions/setup-java@v3
        with:
          java-version: '17'
<<<<<<< HEAD
      - name: Build with Maven
        run: mvn clean package -DskipTests
      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKERHUB_USER }}/safeville:${{ github.sha }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image
        run: docker push ${{ secrets.DOCKERHUB_USER }}/safeville:${{ github.sha }}

  deploy_staging:
    needs: build
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: SSH Deploy Staging
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USER }}/safeville:${{ github.sha }}
            docker-compose -f /home/app/staging/docker-compose.yml up -d

  deploy_production:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: SSH Deploy Production
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USER }}/safeville:${{ github.sha }}
            docker-compose -f /home/app/production/docker-compose.yml up -d
=======
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run tests
        run: mvn test

  docker-deploy:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: safevilleacrbr2025.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Docker image
        run: docker build -t safevilleacrbr2025.azurecr.io/safevilleweb:prod .

      - name: Push Docker image
        run: docker push safevilleacrbr2025.azurecr.io/safevilleweb:prod

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          acrName: safevilleacrbr2025
          resourceGroup: safeville-rg
          containerAppName: safeville-app
          imageToDeploy: safevilleacrbr2025.azurecr.io/safevilleweb:prod
          location: brazilsouth
          environmentVariables: SPRING_PROFILES_ACTIVE=prod
>>>>>>> 1a1d24d (Configura pipeline CI/CD completo)
